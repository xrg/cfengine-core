#######################################################
#
# Create a file, check initial permissions (strange mode)
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  files:
      "$(G.testfile)"
      delete => init_delete;
}

body delete init_delete
{
      dirlinks => "delete";
      rmdirs   => "true";
}

#######################################################

bundle agent test
{
  meta:
      "test_skip_unsupported" string => "windows";

  vars:
      "mode" int => "01010";

  files:
      "$(G.testfile)"
      create => "true",
      perms => test_perms;
}

body perms test_perms
{
      mode => "$(test.mode)";
}

#######################################################

bundle agent check
{
  vars:
      "expect" string => "$(test.mode) 1 \d+ \d+ 0";

      "result" string => execresult(
	     "$(G.perl) -l $(this.promise_dirname)$(const.dirsep)..$(const.dirsep)stat.pl $(G.testfile)",
	     "noshell");

  classes:
      "ok" expression => regcmp("$(expect)", "$(result)");

  #
  # OS X refuses to open(2) file you have no permissions for (which is required for safe_chmod),
  # so this test is temporarily disabled there.
  #
  reports:
    DEBUG::
      "expected: '$(expect)'";
      "got:      '$(result)'";
    ok|darwin::
      "$(this.promise_filename) Pass";
    !ok&!darwin::
      "$(this.promise_filename) FAIL";
}

### PROJECT_ID: core
### CATEGORY_ID: 27
