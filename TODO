


1. Out of processes strategy. Get cfexecd to remember processes
   which might be killed, as well as highest process number
   Put policy into cfagent.conf and save after each run a list
   of potential candidates. or processes which should not be harmed. 

   If any process has more than XX instances, killl that?

2. Work out a way of increasing frequency of runs to every 15 mins

3. cfenvd remember last state and record persistence time of
   anomalies

4. Variables from modules cannot be used in all places because they
are defined at runtime

5. What about remembering the stable core of processes, regardless
   of who owns them? i.e. like pH og cfenvd on the ps table?? Then
   kill the least permanent ones.

6. subroutines with private space:

   import: subroutine xxx

7. SNMP CLI module

9. Rewrite ifconfig stuff
    - routing sockets
    - find out the configured IP address for DHCP clients
    - what happens on multi-homed hosts

10: way of escaping list separator in strings

splint *.c +unixlib

with cutting out header files - non parsable..
splint -weak client.c +unixlib

11: Reverse check md5 database for files that are no longer there -- purge and report.

12: Keep database of things that were "done once only" - with expiry date.